==== Provision the PKI Certificate Revocation Publishing Web Site

In this section we will provision a web server, create a folder to publish the Certificate Revocation Lists to, share and secure the folder, then configure the web server to publish the content of the folder, as our PKI.DIGINERVE.NET site.

IMPORTANT: Focus Server is **PDC-AD-WEBAPPS1**

===== Install Web Role
Our first task is to deploy the IIS Web Service which will be used to expose the web site we will establish in a few momenets.

The following command will create an IIS Service which is ready to support a number of different Web Applications.

```powershell
Install-WindowsFeature -IncludeManagementTools Web-Default-Doc,Web-Dir-Browsing,Web-Http-Errors,Web-Static-Content,Web-Http-Redirect,Web-Http-Logging,Web-Custom-Logging,Web-Log-Libraries,Web-Request-Monitor,Web-Http-Tracing,Web-Stat-Compression,Web-Dyn-Compression,Web-Filtering,Web-Basic-Auth,Web-CertProvider,Web-Client-Auth,Web-Digest-Auth,Web-Cert-Auth,Web-Windows-Auth,Web-Net-Ext45,Web-Asp-Net45
```
===== Create the File Share for the PKI CDP Site

We will crate a folder on this server which we will publish over HTTP as **pki.diginerve.net**. This folder will also need to shared, as we will later want to drop the new CRL files to this share.

The process of publishing the CRL files will be accomplished by the CA itself, therefore I will allow the CA Server to have Full access to the share so that it can complete publish.

```powershell
# Create the Folder
New-Item c:\INetPub\PKI-CDP -ItemType directory -Force

# Delegate the Issuing CA permissions to the File System Folder
icacls C:\inetpub\PKI-CDP\ /grant:r '"diginerve\PDC-AD-CA1$":(OI)(CI)(M)'

# Create the Share
New-SmbShare -Name PKI_CDP -Path c:\INetPub\PKI-CDP -Description 'Shared Folder for PKI Certificate Distribution Publishing' -ReadAccess Everyone

# Grant the Issuing CA Permissions to the Share
Grant-SmbShareAccess -Name PKI_CDP -AccountName DigiNerve\PDC-AD-CA1$ -AccessRight Full
```

===== Create the Web Site for the PKI CDP Site

With the folder now provisioned and shared so that the Certification Authority service can publish the CRL's to the location, we will now configure IIS to publish the folder correctly as a PKI CRL Distribution Point.

```powershell
New-Website -Name PKI-CDP -HostHeader pki.diginerve.net -Port 80 -IPAddress * -Force
Set-ItemProperty 'IIS:\Sites\PKI-CDP' -Name physicalpath -Value C:\INetPub\PKI-CDP
Set-WebConfigurationProperty -PSPath 'IIS:\Sites\PKI-CDP' -Filter /system.webServer/directoryBrowse  -Name enabled -Value true
Set-WebConfigurationProperty -PSPath 'IIS:\Sites\PKI-CDP' -Filter /system.webServer/security/requestfiltering  -Name allowDoubleEscaping -Value true
attrib +h C:\INetPub\PKI-CDP\web.config
```

===== Creating the Certification Policy Statement "CPS"
We will create a Certification Policy Statement in this folder, which will be automatically published as we  share the folder as a Web site. This file should be simply called **CPS** with no extension; and when we define our *CAPolicy.inf* file in a later step, it will refer to this file.

The content of this statement should be a disclaimer to the use of this PKI, it normally has some legal jargon, and can be quite verbose.

```powershell
New-Item C:\INetPub\PKI-CDP\CPS -ItemType file -Force | Out-Null
@"
My Certification Policy Statement - Read Fully and Carefully!
"@ | C:\INetPub\PKI-CDP\CPS -Force
```


===== Register the DNS Alias
With the site now established, we next need to add the DNS alias for this site to our internal (and most likely public) DNS Servers

IMPORTANT: Focus Server is **PDC-AD-DC1**

* On the DNS Server for **DigiNerve.Net** which is hosted on **PDC-AD-DC1**
* Add a new **A** record for **pki** with the IP Address for the node *PDC-AD-WEBAPPS1*, which in my environment is **172.21.80.11**

```powershell
Get-DnsServerZone diginerve.net | Add-DnsServerResourceRecordA -Name 'pki' -IPv4Address 172.21.80.11 -CreatePtr
```
Now, we can test everything is working correctly, we will launch our Internet Browser, and check that we can reach the new *pki.diginerve.net* site, and see that it responds

.pki.diginerve.net Web Page
image::images/PKI2012R2-0043.png[pki.diginerve.net Web Page]

==== Offline Root Certification Authority

The standalone offline root CA will not be installed in the domain. As a matter of fact, it should not even be connected to a network at all, however for management we may keep it 'Online'.

IMPORTANT: Focus Server is **PDC-AD-CAROOT1**

===== Add Certificate Authority Role

To install the Role, we can execute the following Steps

* Open **Server Manager**, and select the option **Manage** and then select **Add Roles and Features.**
** The **Add Roles and Feature Wizard** and on the **Before You Begin** page select **Next**.
** On the **Select installation type** page select **Role-based or feature-based installation** and then click **Next**.
** On the **Select destination server** page choose **Select a server from the server pool** and then click **Next**.
** On the **Select Server Roles** page select **Active Directory Certificate Services**, and then click **Next**.
** On the **Select features** page click **Next**.
** On **Active Directory Certificate Services** page, click **Next**.
** On the **Select Role Services** page, ensure that **Certification Authority** is selected, and then **Next**.
** On **Confirm Installation Selections** page, click **Next**.
**  On the **Installation Results** page, click **Close**.

Or, you can accomplish the same using PowerShell
```powershell
Add-WindowsFeature -Name ADCS-Cert-Authority -IncludeManagementTools
```

===== Configuration Policy
As we deploy CA environments, there are a number of settings which are automatically set as defaults on the installation; the purpose of these is to get the CA Online and working with a little issues as possible. Then as we get more comfortable with the concept of deploying and managing the PKI environment, we can fine tune the default settings to suite your requirements.

However, this is not always the best approach, and we can save a little time by defining many of these settings upfront. To accomplish this, the installation wizard will read a configuration file during deployment which will help tune the installation to match your specific requirements. The configuration file is called **CAPolicy.inf**

The `CAPolicy.inf` contains various settings that are used when installing the Active Directory Certification Service (ADCS) or when renewing the CA certificate. Once you have created your **CAPolicy.inf** file, you must copy it into the *%systemroot%* folder *(e.g., C:\Windows)* of the target server before you install ADCS or renew the CA certificate.

The **CAPolicy.inf** file is fairly straightforward. It is simply an .INF file consisting of named sections containing keys associated with some data. The only required section is **[Version]**. Then we have the **[Certsrv_Server]** section which specifies certain CA settings, most of which only apply when renewing the CA certificate. The initial CA configuration will be defined when the ADCS role is installed, but in the future the settings specified in the CAPolicy.inf file will be used. We also specify an empty CDP and AIA location by listing the **[CRLDistributionPoint]** and **[AuthorityInformationAccess]** sections with no values.

[format="csv", options="header", separator="|"]
|===
Element |Description
[PolicyStatementExtension]|
Policies=InternalPolicy|This section lists the name of the policies for this CA. Multiple policies are separated by commas. The names InternalPolicy is used here as an example, but the names can be whatever you choose when creating the CAPolicy.inf file
[InternalPolicy]|For each policy defined in the PolicyStatementExtension section there must be a section that defines the settings for that particular policy. For the example above, the CAPolicy.inf must contain a [InternalPolicy] section.
OID=1.2.3.4.1455.67.89.5|For each policy, you need to provide a user-defined object identifier (OID)
Notice="Legal Policy Statement"|Text you want displayed as the policy statement
URL=http://pki.diginerve.net/cps|A URL pointer to the policy statement. The URL can be in the form of an HTTP, FTP, or LDAP URL.
|===

===== Policy File
The following table, inspects the different elements which we will include in our CAPolicy.inf file, along with al short exmplaination for each of the settings

[format="csv", options="header", separator="|"]
|===
Setting| Explaination
[Version]|
Signature="$Windows NT$"|Version Mandator Section
[PolicyStatementExtension]|
Policies=InternalPolicy |The Name of the Policy Section we are going to Define
[InternalPolicy]|
OID=1.2.3.4.1455.67.89.5 Notice="Legal Policy Statement" URL=http://pki.cloud.diginerve.net/cps| Details published regarding our PKI Environment
[Certsrv_Server]|Settings specific to this servers installation
RenewalKeyLength=4096|RenewalKeyLength sets the key size for renewal only. This is only used when a new key pair is generated during CA certificate renewal. The key size for the initial CA certificate is set when the CA is installed.
RenewalValidityPeriod=Years RenewalValidityPeriodUnits=10|RenewalValidityPeriod and RenewalValidityPeriodUnits establish the lifetime of the new root CA certificate when renewing the old root CA certificate. It only applies to a root CA. The certificate lifetime of a subordinate CA is determined by its perior. RenewalValidityPeriod can have the following values: Hours, Days, Weeks, Months, and Years.
CRLPeriod=Years CRLPeriodUnits=1|You can use this setting to specify the number of days, weeks, months, or years, that a CRL will be valid.
CRLOverlapPeriod=Hours|You use this setting to specify the number of days, weeks, months, or years that CRLs can overlap. When a large number of certificates are revoked, such as during an employee layoff, the delta CRL size might increase significantly because of the large number of entries, and almost all clients will refer to the older base CRL. You can reduce the size of the overlap period to speed the propagation process for the new base CRL and help minimize the size of delta CRLs.
CRLOverlapPeriodUnits=12|The overlap period for CRLs is the amount of time at the end of a published CRLs lifetime that a client can use to obtain a new CRL before the old CRL is considered unusable. The default setting for this value is 10% of the CRL lifetime. Because some environments may require longer periods to replicate a CRL, this setting can be configured manually
CRLDeltaPeriod=Days CRLDeltaPeriodUnits=1 |Adding CRLDeltaPeriod=Days and CRLDeltaPeriodUnits=0 disables the publishing of Delta CRLs, which is something you should not need to do for a root CA
ValidityPeriod=Years ValidityPeriodUnits=3|You can use this setting to define the number of days, weeks, months, or years that a certificate issued by the CA will be valid. The validity period for a certificate cannot be greater than the validity period of the CA that issued the certificate. The default value depends on the type of certificate
LoadDefaultTemplates=0|Disable this Installation for deploying the normal list of default templates during installation
|===

To create the **CAPolicy.inf** file for the Stand alone Offline CA, we will follow the procedure

```powershell
New-Item C:\Windows\capolicy.inf -ItemType file -Force | Out-Null
@"
[Version]
Signature="`$Windows NT$"

[PolicyStatementExtension]
Policies=InternalPolicy

[InternalPolicy]
OID=1.2.3.4.1455.67.89.5
Notice="DigiNerve PKI Legal Policy Statement"
URL=http://pki.diginerve.net/cps

[Certsrv_Server]
RenewalKeyLength=4096
RenewalValidityPeriod=Years
RenewalValidityPeriodUnits=30
CRLPeriod=Years
CRLPeriodUnits=1
CRLOverlapPeriod=Hours
CRLOverlapPeriodUnits=12
CRLDeltaPeriod=Days
CRLDeltaPeriodUnits=0
ValidityPeriod=Years
ValidityPeriodUnits=10
LoadDefaultTemplates=0
AlternateSignatureAlgorithm=1

[Extensions]
2.5.29.15 = AwIBBg==
Critical = 2.5.29.15
"@ | Out-File C:\Windows\capolicy.inf -Force
```

===== Configure the Enterprise Root CA

To Configure the standalone offline root CA

* Open **Server Manager**, and in the Left Pane list click on **AD CS**
* The main pane will refresh, displaying the list of Certificate Servers. To the top of the view, a notification banner will be presented **Configuration required for Active Directory Certificate Services**, on this banner, click the link for **More**

.Server Manager - AD CS View
image::images/PKI2012R2-0000.png[Server Manager PKI View]

* The **All Servers Task Details and Notifications** dialog will appear. In the *All Tasks* list, we should see an entry for **Post-Deployment Configuration**, click the action link **Configure Active Directory Certificate Services**

.Server Manager - AD CS Configuration Tasks Details View
image::images/PKI2012R2-0001.png[PKI Post Deployment Configuration]

* The **AD CS Configuration** wizard should appear after a few moments.
** The **Credentials** page, starts the process, by requesting *Administrative* credentials for the standalone server. In the **Credentials** text box, provide the account **PDC-AD-CAROOT** and click **Next**

.PKI Wizard - Administrative Credentials Page
image::images/PKI2012R2-0002.png[PKI Wizard - Administrative Credentials]

** On the **Role Services** page, enable **Certification Authority** and click **Next**

.PKI Wizard - PKI Role Selection
image::images/PKI2012R2-0003.png[PKI Wizard - Roles Services]

** On the **Setup Type** page, ensure that **Standalone CA** is selected, and then click **Next**.

.PKI Wizard - PKI CA Type
image::images/PKI2012R2-0009.png[PKI Wizard - Standalone CA Role Selection]

** On the **CA Type** page, ensure that **Root CA** is selected, and then click **Next**.

IMPORTANT: Enterprise option is greyed out as our server is not joined to Active Directory domain.

.PKI Wizard - PKI CA Setup Type
image::images/PKI2012R2-0005.png[PKI Wizard - Enterprise CA Role Selection]

** On the **Private Key** page, ensure that **Create a new private key** is selected, and then click **Next**.

.PKI Wizard - PKI CA Private Key
image::images/PKI2012R2-0010.png[PKI Wizard - CA Private Key]

** On the **Cryptography for CA** page, Set the **Key Length** to **4096**. Next we will **Select the hash algorithm to signing certificates issued by this CA** and set this to **SHA256**, then click Next.

.PKI Wizard - PKI CA Cryptography
image::images/PKI2012R2-0011.png[PKI Wizard - CA Cryptography]

** On the **CA Name** page, under **Common name for this CA**, clear the existing entry and type the new name for this Root Authority, for example **DigiNerve Lab Root CA**. Then click **Next**.

.PKI Wizard - PKI CA Name
image::images/PKI2012R2-0012.png[PKI Wizard -  CA Name]

** On **Validity Period** page, under **Specify the validity period** for the certificate generated for this CA, clear the existing entry and then type **30**. Leave the selection box set to **Years**. Click **Next**.

.PKI Wizard - PKI CA Validity Period
image::images/PKI2012R2-0013.png[PKI Wizard -  CA Validity Period]

** On the **CA Database** page, we will keep the default settings, and click **Next**
** On the **Confirmation** page, review the settings, and assuming there are no issues click **Configure**

.PKI Wizard - PKI CA Configuration Confirmation
image::images/PKI2012R2-0014.png[PKI Wizard - Enterprise CA Configuration Confirmation]

** This step should be pretty quick to complete. Once the installation is successful, click **Close**
* The **All Server Task Details and Notifications** status should now show the Stage as **Completed**, with no additional Actions remaining. **Close** the Dialog.

.PKI Wizard - PKI CA Wizard Complete
image::images/PKI2012R2-0015.png[PKI Wizard - PKI CA Wizard Complete]



Installation using PowerShell
```powershell
Install-AdcsCertificationAuthority -CACommonName "DigiNerve Lab Root CA" `
                                   -CAType StandaloneRootCA `
                                   -CADistinguishedNameSuffix 'DC=DigiNerve,DC=net' `
                                   -HashAlgorithmName sha256 `
                                   -ValidityPeriod Years `
                                   -ValidityPeriodUnits 30 `
                                   -CryptoProviderName 'RSA#Microsoft Software Key Storage Provider' `
                                   -KeyLength 4096 `
                                   -Force
```

===== Post-Installation Configuration of the Standalone Root CA

The initial CA configuration will be defined when the ADCS role is installed, but some of the default options are not totally appropiate for our Root CA out of the box; the following table provides an overview of some of these settings

[format="csv", options="header", separator="|"]
|===
Setting | Explaination
RenewalKeyLength=4096|RenewalKeyLength sets the key size for renewal only. This is only used when a new key pair is generated during CA certificate renewal. The key size for the initial CA certificate is set when the CA is installed.
RenewalValidityPeriod=Years RenewalValidityPeriodUnits=30|RenewalValidityPeriod and RenewalValidityPeriodUnits establish the lifetime of the new root CA certificate when renewing the old root CA certificate. It only applies to a root CA. The certificate lifetime of a subordinate CA is determined by its perior. RenewalValidityPeriod can have the following values: Hours, Days, Weeks, Months, and Years.
CRLPeriod=Years CRLPeriodUnits=1|You can use this setting to specify the number of days, weeks, months, or years, that a CRL will be valid.
CRLOverlapPeriod=Days|You use this setting to specify the number of days, weeks, months, or years that CRLs can overlap. When a large number of certificates are revoked, such as during an employee layoff, the delta CRL size might increase significantly because of the large number of entries, and almost all clients will refer to the older base CRL. You can reduce the size of the overlap period to speed the propagation process for the new base CRL and help minimize the size of delta CRLs.
CRLOverlapPeriodUnits=5|The overlap period for CRLs is the amount of time at the end of a published CRLs lifetime that a client can use to obtain a new CRL before the old CRL is considered unusable. The default setting for this value is 10% of the CRL lifetime. Because some environments may require longer periods to replicate a CRL, this setting can be configured manually
CRLDeltaPeriod=Days CRLDeltaPeriodUnits=0|Adding CRLDeltaPeriod=Days and CRLDeltaPeriodUnits=0 disables the publishing of Delta CRLs, which is something you should not need to do for a root CA
ValidityPeriod=Years ValidityPeriodUnits=10|You can use this setting to define the number of days, weeks, months, or years that a certificate issued by the CA will be valid. The validity period for a certificate cannot be greater than the validity period of the CA that issued the certificate. The default value depends on the type of certificate
|===

To configure these settings on our CA, we can leverage the *certutil* commend.

* Open a Command or Shell, then Execute the following commands
```cmd
certutil -setreg CA\RenewalKeyLength 4096
certutil -setreg CA\RenewalValidityPeriod "Years"
certutil -setreg CA\RenewalValidityPeriodUnits 30
certutil -setreg CA\CRLPeriod "Years"
certutil -setreg CA\CRLPeriodUnits 1
certutil -setreg CA\CRLOverlapPeriod "Days"
certutil -setreg CA\CRLOverlapPeriodUnits 5
certutil -setreg CA\CRLDeltaPeriod "Days"
certutil -setreg CA\CRLDeltaPeriodUnits 0
certutil -setreg CA\ValidityPeriod "Years"
certutil -setreg CA\ValidityPeriodUnits 10
```

===== Enable Auditing Security Policy

CA auditing depends on system Audit Object Access to be enabled. The following instructions describe how to use Local Security Policy to enable object access auditing.

NOTE: You cannot use a domain Group Policy for this case because the offline root CA is not joined to the domain

* From the Windows **Start**, find and launch the **Local Security Policy** editor.

.PKI Wizard - Windows Search for Local Security Policy
image::images/PKI2012R2-0016.png[PKI Wizard - Enterprise CA Validity Period]

* Expand the **Security Settings** tree, then expand the **Local Policies** node, and select the node called **Audit Policy**

.Local Security Policy - Audit Policies
image::images/PKI2012R2-0017.png[PKI Wizard - Enterprise CA Validity Period]

* Double click the policy **Audit Object Access** and in the *Audit Object access Properties* dialog, for the *Audit these attempts* enable both **Success** and **Failure**. Click **OK**.

.Local Security Policy - Audit Object Access Policy
image::images/PKI2012R2-0018.png[PKI Wizard - Enterprise CA Validity Period]

* The policy is now defined. Proceed to **Close** the *Local Security Policy* editor.

Next, We need to tell the CA server to enable auditing, now that we have configured the operating system to log these events on the server. Enable auditing for the CA by configuring the AuditFilter registry key setting.

To configure auditing for all CA related events, Open a Command or Shell, then Execute the following commands

```cmd
certutil -setreg CA\AuditFilter 127
```

===== Configure the AIA and CDP
What are these?

* The *AIA* or *Authority Information Access point* is used to point to the public key for the certification authority (CA).
* The *CDP* or *Certificate Revocation List Distribution Point* is where the certificate revocation list is maintained, which allows client computers to determine if a certificate has been revoked.

When the Certificate Server creates the objects for these elements, it will use a uniquie naming convention with will ensure that even in large complex environments the objects can stay unique. To accomplish this, the server implements a variable replacement procedure where it will automatically inject the name as appropiate for each server based on the elements chosen.

These elements are pre-defined by the CA Service. The combination of elements to utilise can be adjusted based on your requirements. The following table illustrates the list of options available to choose from.

[format="csv", options="header", separator="|"]
|===
Variable|Display Name|Description
%1|ServerDNSName	       |The DNS name of the certification authority server
%2|ServerShortName       |The NetBIOS name of the certification authority server
%3|CaName                |The name of the Certificate Authority
%4|CertificateName       |The renewal extension of the certification authority
%6|ConfigurationContainer|The location of the Configuration container in Active Directory
%7|CATruncatedName       |The "sanitized" name of the certification authority, truncated to 32 characters with a hash on the end
%8|CRLNameSuffix         |Inserts a name suffix at the end of the file name when publishing a CRL to a file or URL location
%9|DeltaCRLAllowed       |When a delta CRL is published, this replaces the CRLNameSuffix with a separate suffix to distinguish the delta CRL
%10|CDPObjectClass       |The object class identifier for CRL distribution points, used when publishing to an LDAP URL
%11|CAObjectClass        |The object class identifier for a certification authority, used when publishing to an LDAP URL
|===

When configuring both the AIA and CDP, you can define the elements by either the *Variable* or *Display Name*, and when publishing these objects the server will inject to appropiate names for these elements.

====== Configure the AIA
When you run the following *certutil* command, you will be configuring a static file system location, and http location for the AIA. The *certutil* command to set the AIA modifies the registry, so ensure that you run the command from an command prompt run as Administrator.

This setting identifies the URL of the authority information access (AIA) point where a client can find a CA certificate. Because the authority information access point is the location of the certificate that was used to sign the certificate.

By Default the CA will be listing an LDAP, HTTP and a File share. Since the Root CA is offline, we will not bother with the LDAP location, and just define our own File location, and HTTP site.


Run the following command:
```powershell
Get-CAAuthorityInformationAccess | Remove-CAAuthorityInformationAccess -Force

certutil –setreg CA\CACertPublicationURLs "1:C:\Windows\System32\CertSrv\CertEnroll\%1_%3%4.crt\n2:http://pki.diginerve.net/%1_%3%4.crt"
```

The HTTP path to pki.diginerve.lab is being used as an alias, enabling us the flexibility to host on highly available web servers

====== Configure the CDP
Clients will use the CDP to locate the CRL for the certificates issued by the CA. This allows certificate clients to ensure that the certificates have not been revoked.

This setting identifies CRL distribution points where a client can find the CRL that is related to a certificate. With an offline Root CA, it generally is necessary to periodically publish CRLs and then move them to an online resource so they can be accessed by subordinate CAs and certificate consumers. How often this needs to be done is dependent upon the publication interval that you choose for the Root CA CRL; in my example this is once a year.

NOTE: If you do not publish new CRLs and move these CRLs to an online location, this will impact the ability for the subordinates to validate revocation information which impacts their ability to issue certificates (i.e. stuff breaks) hence this regular operational process is very important to PKI functionality and health.

As part of the PKI design, you will define a CRL distribution point (CDP) which will allow subordinate CAs and certificate consumers to locate the Root CA CRL file. This will obviously need to be an online resource that can the accessed via the network. It could be on the CAs themselves or another network location (usually HTTP based). As part of the process described above you will move the published CRL from the offline Root CA to this network location; thereby negating the need to have the Root CA network connected.

While it is normal for the offline CA to be powered off when in not use (as well as network disconnected of course) and it only needs to be powered on when performing the periodic CRL publication process (described above) or you need to renew the Root CA certificate.

An alternative approach is to have the offline Root CA not to publish any CRLs, in which case the CRL distribution point of a root CA should be empty. In this scenario, intermediate and issuing CA's will still need to be configured to define their respective CRL distribution points.

The %certutil% command to set the CDP location actauly also modifies the registry, therefore as with all the previous *certutil* commands, you must ensure that you run the command from an Administrative Command prompt:

```powershell
Get-CACrlDistributionPoint | Remove-CACrlDistributionPoint -Force

certutil –setreg CA\CRLPublicationURLs "65:C:\Windows\System32\CertSrv\CertEnroll\%3%8%9.crl\n6:http://pki.diginerve.net/%3%8%9.crl"
```

===== Verifying in the Certificate Authority Console
The Certification Authority also providers a Graphical Management Interface. From the Server Manager, *AD CS* view, if we right click on the CA Server name, from the context menu we can select the option *Certification Authority*, to launch this management console

.Certification Authority - Launching Management Console
image::images/PKI2012R2-0019.png[PKI Wizard - Enterprise CA Validity Period]

* After a few moments the console will load, and we should see our **DigiNerve Lab Root CA** with a nice green check to indicate the services is online.

.Certification Authority - Management Console for CA
image::images/PKI2012R2-0020.png[Certification Authority - Management Console for CA]

* To check the AIA and CDP settings have been correctly implemented, *Right click* on the **DigiNerve Lab Root CA** node, then from the context menu select Properties, to open the **DigiNerve Lab Root Properties** dialog.
** Open the **Extensions** tab
*** Under the drop down list **Select extension**, chose the option **CRL Distribution Point (CDP)**
*** We should see the graphical representation of the CDP settings we just applied.

.Certification Authority - CA CRL Distribution Point Extension
image::images/PKI2012R2-0021.png[Certification Authority - CA CRL Distribution Point Extension]

*** Change the drop down list **Select extension** option, and select **Authority Information Access (AIA)**
*** Again, assuming no issues we should see the graphical representation of the AIA settings we applied.

.Certification Authority - Authority Information Access
image::images/PKI2012R2-0022.png[CA Console - Authority Information Access]

===== Restart the CA Server
We are almost complete with the comissioning of our Offline Root CA. The last really important task to complete at this point is to restart the service, so that all the new settings we have applied will take effect.

```powershell
restart-service certsvc
```

===== Issue Root Certificate CRL
Assuming everything has worked correct so far, all we now need to do is publish, and updated CRL list for the Root CA. These new list should be create in the file location we defined in the AIA and CDP settings a few moments ago.

To issue a new CRL, we can use the following command
```cmd
certutil -crl
```
Looking at the folder, using Windows Explorer, we should see a copy of the Root Certificate, and a freshly created CRL

.CRL - Published Certificate Properties
image::images/PKI2012R2-0023.png[PKI Wizard - Enterprise CA Validity Period]


===== Deploy the Root CA CRL to the CDP
Copy the CRL file, which is located at *C:\Windows\System32\CertSrv\CertEnroll* and drop it to our PKI_CDP Share, which we hosted on *\\PDC-AD-WEBAPPS1\PKI_CDP*

.CRL Location on the Office Root CA Server
image::images/PKI2012R2-0041.png[CRL Location on the Office Root CA Server]

Now, we can test everything is working correctly, we will launch our Internet Browser, and check that we can reach the new *pki.diginerve.net* site, and see that it responds

.CRL Copy to the CDP Location on PDC-AD-WEBAPPS1
image::images/PKI2012R2-0042.png[CRL Copy to the CDP Location on PDC-AD-WEBAPPS1]


===== Publish the Public Root Certificate
Copy in the .CRT file for the certificate server to the CDP Web Folder

```powershell
copy C:\Windows\System32\CertSrv\CertEnroll\*.crt \\PDC-AD-WEBAPPS1\PKI_CDP
```

==== Online Issuing Enterprise Subordinate Certification Authority

The enterprise subordinate CA will be installed in the domain. this server will be responsible for issuing the certificates to our users and devices.

While we can use the Graphical Tools to assist in deploying the CA Roll Again on this node, much of that procedure is a clear repeat of the steps we executed on the Root CA, therefore I am going to defualt to using PowerShell for the installations, and call out the different choices we are making on the subordinate installation when we meet them.

IMPORTANT: Focus Server is **PDC-AD-CA1**

===== Add Certificate Authority Role

To install the Role, we can execute the following PowerShell command

```powershell
Add-WindowsFeature -Name ADCS-Cert-Authority -IncludeManagementTools
```

===== Policy File
Similar to the policy we defined on the Root Server, we will make a number of small changes to the policy, so that it matches our objective for the Issuing CA. The following table, inspects the different elements which we will include in our CAPolicy.inf file, along with al short exmplaination for each of the settings

[format="csv", options="header", separator="|"]
|===
Setting| Explaination
[Version]|
Signature="$Windows NT$"|Version Mandator Section
[PolicyStatementExtension]|
Policies=InternalPolicy |The Name of the Policy Section we are going to Define
[InternalPolicy]|
OID=1.2.3.4.1455.67.89.5 Notice="Legal Policy Statement" URL=http://pki.diginerve.net/cps| Details published regarding our PKI Environment
[Certsrv_Server]|Settings specific to this servers installation
CRLPeriod=Years CRLPeriodUnits=1|You can use this setting to specify the number of days, weeks, months, or years, that a CRL will be valid.
CRLOverlapPeriod=Hours|You use this setting to specify the number of days, weeks, months, or years that CRLs can overlap. When a large number of certificates are revoked, such as during an employee layoff, the delta CRL size might increase significantly because of the large number of entries, and almost all clients will refer to the older base CRL. You can reduce the size of the overlap period to speed the propagation process for the new base CRL and help minimize the size of delta CRLs.
CRLOverlapPeriodUnits=12|The overlap period for CRLs is the amount of time at the end of a published CRLs lifetime that a client can use to obtain a new CRL before the old CRL is considered unusable. The default setting for this value is 10% of the CRL lifetime. Because some environments may require longer periods to replicate a CRL, this setting can be configured manually
CRLDeltaPeriod=Days CRLDeltaPeriodUnits=1 |Adding CRLDeltaPeriod=Days and CRLDeltaPeriodUnits=0 disables the publishing of Delta CRLs, which is something you should not need to do for a root CA
ValidityPeriod=Years ValidityPeriodUnits=3|You can use this setting to define the number of days, weeks, months, or years that a certificate issued by the CA will be valid. The validity period for a certificate cannot be greater than the validity period of the CA that issued the certificate. The default value depends on the type of certificate
LoadDefaultTemplates=0|Disable this Installation for deploying the normal list of default templates during installation
|===

To create the **CAPolicy.inf** file for the Standalone Offline CA, we will follow the procedure

```powershell
New-Item C:\Windows\capolicy.inf -ItemType file -Force | Out-Null
@"
[Version]
Signature="`$Windows NT$"

[PolicyStatementExtension]
Policies=InternalPolicy

[InternalPolicy]
OID=1.2.3.4.1455.67.89.5
Notice="DigiNerve PKI Legal Policy Statement"
URL=http://pki.diginerve.net/cps

[Certsrv_Server]
CRLPeriod=Years
CRLPeriodUnits=1
CRLOverlapPeriod=Hours
CRLOverlapPeriodUnits=12
CRLDeltaPeriod=Days
CRLDeltaPeriodUnits=1
ValidityPeriod=Years
ValidityPeriodUnits=3
LoadDefaultTemplates=0
AlternateSignatureAlgorithm=1

[Extensions]
2.5.29.15 = AwIBBg==
Critical = 2.5.29.15
"@ | Out-File C:\Windows\capolicy.inf -Force
```

===== Configure the Enterprise Subordinate CA

To Configure the Enterprise Subordinate Online Issuing CA

* Open **Server Manager**, and in the Left Pane list click on **AD CS**
* The main pane will refresh, displaying the list of Certificate Servers. To the top of the view, a notification banner will be presented **Configuration required for Active Directory Certificate Services**, on this banner, click the link for **More**
* The **All Servers Task Details and Notifications** dialog will appear. In the *All Tasks* list, we should see an entry for **Post-Deployment Configuration**, click the action link **Configure Active Directory Certificate Services**
* The **AD CS Configuration** wizard should appear after a few moments.
** The **Credentials** page, starts the process, by requesting *Administrative* credentials for the standalone server. In the **Credentials** text box, provide the account **PDC-AD-CAROOT** and click **Next**
** On the **Role Services** page, enable **Certification Authority** and click **Next**
** On the **Setup Type** page, ensure that **Enterprise CA** is selected, and then click **Next**.

IMPORTANT: Enterprise option is greyed out if you are NOT logged in with a user account which is a member of the Enterprise Administrators group.

.PKI Wizard - PKI CA Type
image::images/PKI2012R2-0024.png[PKI Wizard - Enterprise CA Role Selection]

** On the **CA Type** page, ensure that **Subordinate CA** is selected, and then click **Next**.

.PKI Wizard - PKI CA Setup Type
image::images/PKI2012R2-0025.png[PKI Wizard - Enterprise CA Role Selection]

** On the **Private Key** page, ensure that **Create a new private key** is selected, and then click **Next**.
** On the **Cryptography for CA** page, Set the **Key Length** to **4096**. Next we will **Select the hash algorithm to signing certificates issued by this CA** and set this to **SHA256**, then click Next.
** On the **CA Name** page, under **Common name for this CA**, clear the existing entry and type the new name for this Authority, for example **DigiNerve Lab Issuing CA**. Then click **Next**.

.PKI Wizard - PKI CA Name
image::images/PKI2012R2-0026.png[PKI Wizard -  CA Name]

** On **Certificate Request** page, enable the option **Save a certificate request to file on target machine** and in the *File name* field we can retain the default certificate request file **C:\PDC-AD-CA1.DigiNerve.net_DigiNerve-PDC-AD-CA1-CA.req**. Click **Next**.

.PKI Wizard - PKI CA Certificate Request
image::images/PKI2012R2-0027.png[PKI Wizard - CA Request]

** On the **CA Database** page, we will keep the default settings, and click **Next**
** On the **Confirmation** page, review the settings, and assuming there are no issues click **Configure**

.PKI Wizard - PKI CA Configuration Confirmation
image::images/PKI2012R2-0028.png[PKI Wizard - Enterprise CA Configuration Confirmation]

** This step should be pretty quick to complete. Once the installation is successful, click **Close**
* The **All Server Task Details and Notifications** status should now show the Stage as **Completed**, with no additional Actions remaining. **Close** the Dialog.

.PKI Wizard - PKI CA Wizard Complete
image::images/PKI2012R2-0015.png[PKI Wizard - PKI CA Wizard Complete]

NOTE: Using the Wizard, appears to cause the installation to ignore the **CAPolicy.inf** file which we defined earlier.

Installation using PowerShell
```powershell
Install-AdcsCertificationAuthority -CACommonName "DigiNerve Lab Issuing CA" `
                                   -CAType EnterpriseSubordinateCA `
                                   -CADistinguishedNameSuffix 'DC=DigiNerve,DC=net' `
                                   -HashAlgorithmName sha512 `
                                   -CryptoProviderName 'RSA#Microsoft Software Key Storage Provider' `
                                   -KeyLength 4096 `
                                   -Force
```

The output of the command, will indicate an error, which is not technically true. What we are really being told, and can see in the screen grab, is that the tool has created the Request File which we need to provide to the Root CA, to issue a certificate for this server to be authorised to go online.

.PKI CLI Installation
image::images/PKI2012R2-0029.png[PKI CLI Installation]

The request file is saved to the *C:* drive by default, and from the verbose message, we can see in my cast the file is called *C:\PDC-AD-CA1.DigiNerve.net_DigiNerve Lab Issuing CA.req*.

===== Post-Installation Configuration

Depending on the method which was chosen to install the CA, some or all of the settings we defined in the **CAPolicy.inf** file might not have been applied. Therefore, I am going to be extra careful and set the settings directly on the server. The following table provides an overview of some of these settings again which we described a little earlier

To configure these settings on our CA, we can leverage the *certutil* commend.

* Open a Command or Shell, then Execute the following commands
```cmd
certutil -setreg CA\CRLPeriod "Weeks"
certutil -setreg CA\CRLPeriodUnits 1
certutil -setreg CA\CRLOverlapPeriod "Hours"
certutil -setreg CA\CRLOverlapPeriodUnits 12
certutil -setreg CA\CRLDeltaPeriod "Days"
certutil -setreg CA\CRLDeltaPeriodUnits 1
certutil -setreg CA\ValidityPeriod "Years"
certutil -setreg CA\ValidityPeriodUnits 3
```

===== Enable Auditing Security Policy

CA auditing depends on system Audit Object Access to be enabled. The following instructions describe how to use Local Security Policy to enable object access auditing.

* From the Windows **Start**, find and launch the **Local Security Policy** editor.

.PKI Wizard - Windows Search for Local Security Policy
image::images/PKI2012R2-0016.png[PKI Wizard - Enterprise CA Validity Period]

* Expand the **Security Settings** tree, then expand the **Local Policies** node, and select the node called **Audit Policy**

.Local Security Policy - Audit Policies
image::images/PKI2012R2-0017.png[PKI Wizard - Enterprise CA Validity Period]

* Double click the policy **Audit Object Access** and in the *Audit Object access Properties* dialog, for the *Audit these attempts* enable both **Success** and **Failure**. Click **OK**.

.Local Security Policy - Audit Object Access Policy
image::images/PKI2012R2-0018.png[PKI Wizard - Enterprise CA Validity Period]

* The policy is now defined. Proceed to **Close** the *Local Security Policy* editor.

Next, We need to tell the CA server to enable auditing, now that we have configured the operating system to log these events on the server. Enable auditing for the CA by configuring the AuditFilter registry key setting.

To configure auditing for all CA related events, Open a Command or Shell, then Execute the following commands

```cmd
certutil -setreg CA\AuditFilter 127
```

====== Configure the Authority Information Access point
This setting identifies the URL of the authority information access (AIA) point where a client can find a CA certificate. Because the authority information access point is the location of the certificate that was used to sign the certificate.

Run the following command:
```powershell
New-Item c:\PKI\CDP -ItemType directory -Force
Get-CAAuthorityInformationAccess | Remove-CAAuthorityInformationAccess -Force
Add-CAAuthorityInformationAccess -Uri file://C:\PKI\CDP\%1_%3%4.crt -Force
Add-CAAuthorityInformationAccess -Uri file://\\PDC-AD-WEBAPPS1.diginerve.net\PKI_CDP\%1_%3%4.crt -Force
Add-CAAuthorityInformationAccess -Uri http://pki.diginerve.net/%1_%3%4.crt -AddToCertificateAia -Force
```

====== Configure the Certificate Revocation List Distribution Point
This setting identifies CRL distribution points where a client can find the CRL that is related to a certificate.

```powershell
Get-CACrlDistributionPoint | Remove-CACrlDistributionPoint -Force
Add-CACrlDistributionPoint -Uri file://C:\PKI\CDP\%3%8%9.crl -PublishToServer -PublishDeltaToServer -Force
Add-CACrlDistributionPoint -Uri file://\\PDC-AD-WEBAPPS1.diginerve.net\PKI_CDP\%3%8%9.crl -PublishToServer -PublishDeltaToServer -Force
Add-CACrlDistributionPoint -Uri http://pki.diginerve.net/%3%8%9.crl -AddToCertificateCdp -AddToFreshestCrl -Force
```


==== Authorise the Subordinate CA to go Online
The enterprise subordinate CA will be authorised to run trough the issuing of the certificate from the Root CA. The process is quite trivial:

* We start with the *Certificate Request* file we get after the Subordinate server was installed.
* This is processed on the *Root CA*, which will create a new certificate for us.
* This new certificate will then be installed on the *Subordinate CA* to authoirze it.

===== Process the Request on the Root CA

IMPORTANT: Focus Server is **PDC-AD-CAROOT1**

Using the Certification Authority Graphical Management Interface, hosted on the Root CA, launch the management console:

.Server Manager - Certification Authority
image::images/PKI2012R2-0019.png[Server Manager - Certification Authority]

* After a few moments the console will load, and we should see our **DigiNerve Lab Root CA** with a nice green check to indicate the services is online. Right Click on this node, and from the context menu select the options **All Tasks** and then **Submit new request...**

.Server Manager - Certification Authority
image::images/PKI2012R2-0031.png[Server Manager - Certification Authority]

* In the **Open Request File** dialog, navigate to the path on the Subordinate CA where the request file was placed. Highlight the request file, which in my case was called *\\PDC-AD-CA1\c$\PDC-AD-CA1.DigiNerve.net_DigiNerve Lab Issuing CA.req* and then click on **Open**.

.Server Manager - Certification Authority
image::images/PKI2012R2-0032.png[Server Manager - Certification Authority]

* Now, expand the node **Pending Requests**, we should see in the main pane the request submission we just completed. Right click on this submitted request, and from the context menu select the option **All Tasks** and then **Issue**

.Server Manager - Certification Authority
image::images/PKI2012R2-0033.png[Server Manager - Certification Authority]

* The Request should now vanish from the **Pending Requests** node as it is processed. Assuming we have no issues, the request should now be presented in the **Issued Certificates** node.

.Server Manager - Certification Authority
image::images/PKI2012R2-0034.png[Server Manager - Certification Authority]

* Great, Now, let's Double Click on the on the certificate in the main pane, We should see that this new certificate has been *Issued By* our **DigiNerve Lab Root CA**, and *Issued To* our **DigiNerve Lab Issuing CA** *

.Server Manager - Certification Authority
image::images/PKI2012R2-0035.png[Server Manager - Certification Authority]

** On the **Details** tab of the *Certificate*, we can click on the **Copy to File...** button to export the Certificate

.Server Manager - Certification Authority
image::images/PKI2012R2-0036.png[Server Manager - Certification Authority]

** This will launch the **Certificate Export Wizard**, click **Next** to open the **Export File Format** Page.
** In the **Select the format you want to use** section, select the choice, **Cryptographic Message Syntax Standard - PKCS #7 Certificates (.P7B)** radio button. Next select the option **Include all certificates in the certification path if possible**. Then click **Next**
** On the **File to Export** page, in the **File Name** field, enter the location where you wish to place the exported certficate, for example on the root drive of the Issuing CA Server, for example I am using *\\pdc-ad-ca1\c$\PDC-AD-CA1.DigiNerve.net_DigiNerve-PDC-AD-CA1-CA.p7b*. Click **Next**
** Review the details presented on the **Completing the Certificate Export Wizard** page, and then click on **Finish**. The wizard should popup a notice to confirm the export was sucessful.
* We can now close the **Certificate** dialog.


===== Authorise the SubOrdinate CA

IMPORTANT: Focus Server is **PDC-AD-CA1**

Using the Certification Authority Graphical Management Interface, hosted on the Subordinate CA, launch the management console:

* After a few moments the console will load, and we should see our **DigiNerve Lab Issuing CA** with a black powered off icon to indicate the services is offline. Right Click on this node, and from the context menu select the options **All Tasks** and then **Install CA Certificate...**

.Server Manager - Certification Authority
image::images/PKI2012R2-0037.png[Server Manager - Certification Authority]

* In the **Select file to complete CA Installation** dailog, navigate to the path on the Subordinate CA where the certificate we just issued from the *Root CA* was placed. Highlight the request file, which in my case was called *c:\PDC-AD-CA1.DigiNerve.net_DigiNerve-PDC-AD-CA1-CA.p7b* and then click on **Open**.

.Server Manager - Certification Authority
image::images/PKI2012R2-0038.png[Server Manager - Certification Authority]

* The Service will next report that it *Cannot find the certificate for the Root CA on this server*, and request that it is allowed to import this certificate at this time. This certificate we included in the chain we exported from the Root CA, so we should be fine to let the wizard do this work also; simply click **OK**

.Server Manager - Certification Authority
image::images/PKI2012R2-0039.png[Server Manager - Certification Authority]

* Now, on our **DigiNerve Lab Issuing CA** with the black powered off icon to indicate the services is offline. Right Click on this node, and from the context menu select the options **All Tasks** and then **Start Service**

.Server Manager - Certification Authority
image::images/PKI2012R2-0040.png[Server Manager - Certification Authority]

Assuming the Certificate was correctly installed, and that your HTTP CDP location is still working, we should now be online with our Subordinate CA also. If the Subordinate fails to start, you will need to check your logs to determine what has cause the start to fail


===== Publish the Public Root Certificate
Copy in the .CRT file for the certificate server to the CDP Web Folder

```powershell
copy C:\Windows\System32\CertSrv\CertEnroll\*.crt \\PDC-AD-WEBAPPS1\PKI_CDP
```

===== Verifying in the PKI Site is fully populated
Phew, that was a lot of stuff, but now we can test *everything* is working correctly. As before we will launch our Internet Browser, and check that we can reach the new *pki.diginerve.net* site, and see that it responds

We are expecting to see 4 main groups of content now
1. Our Certification Policy Statement, the *CPS* File
2. Our Root CA CRL List, the *DigiNerve Lab Root CA.crl* File
3. Our Issuing CA CRL List, and its Delta, both the *DigiNerve Lab Issuing CA.crl* and *DigiNerve Lab Issuing CA+.crl* Files
4. Our public key Root and Issuing CA certificates

.Server Manager - Certification Authority
image::images/PKI2012R2-0044.png[Server Manager - Certification Authority]
