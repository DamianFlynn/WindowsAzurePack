==== Library
With SCVMM now installed, and a successful login completed, its time to implement some of the basic configurations which will help our experience while working with Virtual Machine Manager

IMPORTANT: Focus Server is **PDC-SC-VMM1**

===== Library Server's
As part of the installation process on a standalone SCVMM server, the wizard will require that we provide the name of a share which should be used for the SCVMM Library.

In a Clustered installation of SCVMM, this step is not included, as the share used for the library will generally be on an independent server, and we will instead add the new library as a post configuration step!.

===== Organizing The Library Servers
Well, to be honest, even in a standalone installation I will remove the initial library which is established with an specific library server. The following illustration, presents the default library connected to SCVMM after the installation of the standalone server.

.SCVMM Library - Default Library Resources
image::images/SCVMM2012R2-0005.png[PKI Post Deployment Configuration]

In the next steps, we will instantiate a new Library server, and in the case of a standalone SCVMM installation, loop back and Remove the original library share from the system.

===== Prepare a new server to be a "Library Server"
We have two main tasks to complete on the target File Server, to successfully register and use it within VM with little effort.

1. System Center Management Action Access to the Library Server.
Our first, objective is to ensure that the Management Action account, in this case *DigiNerve\!svcSC_MGTAction*, is added to the *Local Administrators* group on the host.

2. Create a folder and share to host the Library Data.
To keep the data organized, we will create a folder on the server which we will then share out as the library server.

We do not need to get to granular on the security for now.

```powershell
# Create the Folder
New-Item D:\Library -ItemType directory -Force

# Create the Share
New-SmbShare -Name Library -Path D:\Library -Description 'Library Share for VMM and Cloud Resources Library' -FullAccess Everyone
```

===== Add Library Server to Virtual Machine Manager
The setting is available by navigating to **Library** on the *Wunderbar*, then in the *Navigation Tree* expand the node **Library Servers**. In the *Main Pane* we will see a list of all resources which maybe currently stored in the library.

To add a new Library Server, Right Click on the node **Library Servers** and from the Context menu chose the option **Add Library Server**.

.SCVMM Library - Add Library Server
image::images/SCVMM2012R2-0016.png[PKI Post Deployment Configuration]

* The **Add Library Server** wizard should be presented. The first page will be the **Enter Credentials**, where we will provide the account details which has permissions to manage the hosts we are going to adopt as a new library server.

.SCVMM Library - Add Library Server
image::images/SCVMM2012R2-0017.png[PKI Post Deployment Configuration]

* We will use the option **Use an existing Run As account**. To select the Account to be utilized for this task, we will click on the **Browse...** button to open the **Select a Run As Account**

.SCVMM Library - Credentials Request
image::images/SCVMM2012R2-0018.png[PKI Post Deployment Configuration]

** If an appropriate *Run As* account is not offered in the list to select from, we can use the button **Create Run As Account** and follow similar steps to the procedure we implemented in the topic **Run As account for Compute Fabric Management**
** With the appropriate profile defined, select it, **DigiNerve Compute Fabric Management** in the **Select a Run As Account**, then click **OK**

.SCVMM Library - Run As Accounts
image::images/SCVMM2012R2-0020.png[PKI Post Deployment Configuration]

* On the **Select Library Servers** page of the *Add Library Server* wizard, we will provide the detail of the target Library servers. In the **Domain** and **Computer Name** fields we will enter the name of our target system, for example I am going to enter my server *PDC-FS-SMB1*. Finally, I will click on **Add** to start the search and discovery for the *Server*

.SCVMM Library - Select the Server
image::images/SCVMM2012R2-0022.png[PKI Post Deployment Configuration]

* The Wizard should update, with the fully qualified name of the discovered server, and the operating system which is deployed to the server. Assuming the information is correct we can click **Next** to proceed
* On the **Add Library Shares** page, we should now see a list of enumerated shared which were detected on the discover host.
** In the main window pane, I see the name of the discovered server, and when expanded, I can now also see the *Library* share

.SCVMM Library - Select the Share for the Library
image::images/SCVMM2012R2-0024.png[PKI Post Deployment Configuration]

** To **add** a discovered share to the library we will **enable** the checkbox to the left or the *Share Name*.
** In addition, VMM provides some additional resources which are important to supporting *Services*, so on at least one of our library shares we will **Add Default Resources** by **Enabling** the check box to add these artifacts.
** When all the required shares have been selected, simply click **Next**
* On the **Summary** page, we can review the choices we have made, and once satisfied that these are correct, we just select the option **Add Library Servers**, which will launch the job.

.SCVMM Library - Summary Information
image::images/SCVMM2012R2-0025.png[PKI Post Deployment Configuration]

As with everything we have achieved so far, we can also use PowerShell to add the library shares to VMM

```powershell
$RunAs = Get-SCRunAsAccount -Name "DigiNerve Compute Fabric Management"
Add-SCLibraryServer -ComputerName pdc-fs-smb1.diginerve.net -Description "Windows 2012R2 SMB3 Library Server" -Credential $RunAs


Name                              : pdc-fs-smb1.diginerve.net
Status                            : Responding
FullyQualifiedDomainName          : pdc-fs-smb1.diginerve.net
FQDN                              : pdc-fs-smb1.diginerve.net
ComputerName                      : pdc-fs-smb1
DomainName                        : diginerve.net
ManagedComputer                   : pdc-fs-smb1.diginerve.net
Description                       : Windows 2012R2 SMB3 Library Server
LibraryGroup                      :
HostGroupId                       :
IsClusterNode                     : False
IsVirtualClusterName              : False
FibreChannelSANStatus             : SANNotConfigured (1245)
ISCSISANStatus                    : SANNotConfigured (1245)
NPIVFibreChannelSANStatus         : SANNotConfigured (1245)
IsUnencryptedFileTransferEnabled  : False
LibraryServerManagementCredential : DigiNerve Compute Fabric Managment
VMNetworks                        : {}
ServerConnection                  : Microsoft.SystemCenter.VirtualMachineManager.Remoting.ServerConnection
ID                                : 0be22d25-d3f7-4ce4-b440-a577df226c38
IsViewOnly                        : False
ObjectType                        : LibraryServer
MarkedForDeletion                 : False
IsFullyCached                     : True
AllowUnencryptedTransfers         : False


Add-SCLibraryShare -AddDefaultResources -Description "Library Share for VMM and Cloud Resources Library" -SharePath "\\pdc-fs-smb1.diginerve.net\Library"


Name              : Library
Description       : Library Share for VMM and Cloud Resources Library
LibraryServer     : pdc-fs-smb1.diginerve.net
Path              : \\pdc-fs-smb1.diginerve.net\Library
ServerConnection  : Microsoft.SystemCenter.VirtualMachineManager.Remoting.ServerConnection
ID                : d71401fd-a669-432b-83f5-786fdc79d665
IsViewOnly        : False
ObjectType        : LibraryShare
MarkedForDeletion : False
IsFullyCached     : True
```


===== Remove the Default Library Server
To complete the configuration, we will proceed to clean up the originally deployed *Default Library Server* which was deployed as part of the installation process on our standalone SCVMM server.

NOTE: We are going to use our Fabric Run As account we defined a little earlier for this management task. Remember that we need to include this account which we called *!svcSC_MGTAction* as a member of the *Local Administrators* group on the hosting server!

As before, the setting we are interested in, is located by navigating to **Library** on the *Wunderbar*, then in the *Navigation Tree* expand the node **Library Servers**.

To remove a Library Server, Right Click on the node which represents your default server share, in my example this is **PDC-SC-VMM1.DigiNerve.net** and from the Context menu chose the option **Remove**.

.SCVMM Library - Remove Library Server
image::images/SCVMM2012R2-0026.png[PKI Post Deployment Configuration]

* The **Remove PDC-SC-VMM1.DigiNerve.net** wizard will be presented. This page will be the **Enter Credentials**, where we will provide the account details which has permissions to manage the hosts we are going to adopt as a new library server.
* We will use the option **Use an existing Run As account**. To select the Account to be utilized for this task, we will click on the **Browse...** button to open the **Select a Run As Account**

.SCVMM Library - Authentication method to authorise the removal
image::images/SCVMM2012R2-0027.png[PKI Post Deployment Configuration]

** We can select the *Run As* account which we defined in the earlier step for managing our fabric, which in my case was called **DigiNerve Compute Fabric Management** in the **Select a Run As Account** dialog, then click **OK**

.SCVMM Library - Run As selection for the task
image::images/SCVMM2012R2-0028.png[PKI Post Deployment Configuration]

* Now, simply click *OK* to start the removal process

Once again, we can also use PowerShell to clean up the Library’s registered in VMM

```powershell
$RunAs = Get-SCRunAsAccount -Name "DigiNerve Compute Fabric Management"
Add-SCLibraryServer -ComputerName pdc-fs-smb1.diginerve.net -Description "Windows 2012R2 SMB3 Library Server" -Credential $RunAs
```
Assuming you have no permission issue, the library server should now be unregistered.

==== Library Share Resources
The resources we will leverage in VMM will be hosted normally from the shares we just registered in VMM as Library shares. Managing the content of these shares within VMM is actually quite restricted, so we will quite regularly find that we are going to be using *Windows Explorer* and the VMM PowerShell tools to do a lot of the work with the library.

We will take a look at the following tasks to get us started
1. The Organization of the folders within the library share.
2. Adding some resources to the library
3. Refreshing VMMs view of the share

===== Exploring the Library Share
The library share is going to be quite familiar, and using *Windows Explorer* we can easily connect and organize the structure and content of the library. VMM also offers a nice shortcut to get us access to the Library Share.

As before, the setting we are interested in, is located by navigating to **Library** on the *Wunderbar*, then in the *Navigation Tree* expand the node **Library Servers**.

To Explore the Library Share, *Expand* the node which represents your library server, then **Right Click** on the share, in my example this is **Library** and from the Context menu chose the option **Explore**.

.SCVMM Library - Library Shortcut to Windows Explorer
image::images/SCVMM2012R2-0032.png[PKI Post Deployment Configuration]

*Windows Explorer* should now be launched, with a view of the library, and the contained folders, which due to our selection to have VMM include the *Default Resources* will contain just a folder called **ApplicationFrameworks**

To begin structuring my Library, I will implement a simple base set of folders as illustrated in the following graph.

```mermaid
graph LR;
    L1(Library)-->LA(ApplicationFrameworks)
    L1(Library)-->LI(ISOs)
    L1(Library)-->LV(VHDs)
```

Creating the folders, you can use either *Windows Explorer* or of course PowerShell

```powershell
mkdir \\pdc-fs-smb1.diginerve.net\Library\ISOs
mkdir \\pdc-fs-smb1.diginerve.net\Library\VHDs
```

===== Populating the Library Share
With the share now in place, we can start adding the initial resources.

====== ISO Images
The initial resources which I normally add to the library will be the source media, which is generally delivered in the form of CD Images, or ISO files.

The source of these ISOs will depend on the resource you are adding, for example if these resources are Linux installation media, we will acquire these from the distributions Web repositories; if the resources are Windows Operating Systems, then these maybe sourced from evaluation media, or other sources including the *Microsoft Developer Network (MSDN)*, or the *Microsoft Licensing Center*.

====== Windows
Windows is a distributed normally in a Server and Client version, both build on essentially the same Kernels; thus the process we apply for Servers would be applicable also to the Client Versions of the OS. Windows uses a 3 version train, which includes Current (vNOW), Previous (vNow -1) and Next (vNext). At the time of writing *(2015-05)* the Active Server Version are:

* Windows Server 2012 (vNow -1)
* Windows Server 2012 R2 (vNow)
* Windows Server 2016 Technical Preview (vNext)

All older releases are archived to services like MSDN *releases* site; which require an account to access, and normally these are not Free.

To locate the Images we are going to add to the library, we will navigate to the Microsoft Evaluation Center download pages http://www.ubuntu.com/download/server.

.Microsoft Download for Windows Evaluations
image::images/SCVMM2012R2-0056.png[PKI Post Deployment Configuration]

We can use a Browser to download and save the ISO Images

* Windows Server 2016 (Preview) : https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-technical-preview
* Windows Server 2012 R2: https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2012-r2
* Windows Server 2012: https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2012

====== CentOS
CentOS is an Open Source version of Redhat Enterprise Linux. As with Redhat, CentOS has normally two active release trains, which at the time of writing *(2015-05)* are:

* CentOS 7.0
* CentOS 6.6

All older releases are archived to a storage repository which is referred to as the *Vault*; which really implies that the location we acquire the images from will be slight different depending on their life cycle status.

To locate the Images we are going to add to the library, we will navigate to the CentOS download pages http://www.centos.org/download/. We will see from there that the older versions of the operating systems are accessible from the following linked page http://wiki.centos.org/Download

.CentOS Download Page
image::images/SCVMM2012R2-0054.png[PKI Post Deployment Configuration]

We can use a Browser, or PowerShell to download and save the ISO Images
* CentOS 7.0
  * ISO Direct Links
    * http://isoredirect.centos.org/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-1503-01.iso
    * http://isoredirect.centos.org/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-1503-02.iso
* CentOS 6.6
  * ISO Direct Links
    * http://ftp.heanet.ie/pub/centos/6.6/isos/x86_64/CentOS-6.6-x86_64-bin-DVD1.iso
    * http://ftp.heanet.ie/pub/centos/6.6/isos/x86_64/CentOS-6.6-x86_64-bin-DVD2.iso
* CentOS 6.5
  * ISO Direct Links
    * http://vault.centos.org/6.5/isos/x86_64/CentOS-6.5-x86_64-bin-DVD1.iso
    * http://vault.centos.org/6.5/isos/x86_64/CentOS-6.5-x86_64-bin-DVD2.iso

The PowerShell commands would look similar to the following:
```powershell
curl -Uri http://vault.centos.org/6.5/isos/x86_64/CentOS-6.5-x86_64-bin-DVD1.iso -OutFile \\pdc-fs-smb1.diginerve.net\Library\ISOs\CentOS-6.5-x86_64-DVD.iso -MaximumRedirection 3 -Verbose
```

====== Ubuntu
Ubuntu is a distributed normally in a Server and Client version, both build on essentially the same Kernels; thus the process we apply for Servers would be applicable also to the Client Versions of the OS. Ubuntu has two main trains of Linux releases, Short Term Support and for Enterprise’s the Long Term Support (LTS) versions. As with the Linux Kernel, Only versions which are numbered Even, e.g. Ubuntu 10,12,14 will be considered for LTS, and once expired the Short Term Support versions will be Archived. At the time of writing *(2015-05)* the Active Server Version are:

* Ubuntu 14.04.2 LTS
* Ubuntu 15.04

All older releases are archived to a storage repository which is referred to as the *releases* site; which really implies that the location we acquire the images from will be slight different depending on their life cycle status.

To locate the Images we are going to add to the library, we will navigate to the CentOS download pages http://www.ubuntu.com/download/server. We will see from there that the older versions of the operating systems are accessible from the following linked page http://releases.ubuntu.com/. The archived Unsupported versions of Ubuntu are hosted here http://cdimage.ubuntu.com/releases/

.Ubuntu Download Page
image::images/SCVMM2012R2-0055.png[PKI Post Deployment Configuration]

We can use a Browser, or PowerShell to download and save the ISO Images

* CentOS 15.04
  * ISO Direct Links
    * http://releases.ubuntu.com/15.04/ubuntu-15.04-server-amd64.iso
* Ubuntu 14.04.02 (LTS)
  * ISO Direct Links
    * http://releases.ubuntu.com/14.04.2/ubuntu-14.04.2-server-amd64.iso
* Ubuntu 14.10
  * ISO Direct Links
    * http://releases.ubuntu.com/14.10/ubuntu-14.10-server-amd64.iso


The PowerShell commands would look similar to the following:
```powershell
curl -Uri http://releases.ubuntu.com/14.04.2/ubuntu-14.04.2-server-amd64.iso -OutFile \\pdc-fs-smb1.diginerve.net\Library\ISOs\Ubuntu-14.04.2-server-amd64.iso -MaximumRedirection 3 -Verbose
```

===== VHD Images
The Virtual Hard Disk resources which we add to the library will normally always need to be prepared, prior to their inclusion. The level of preparation will greatly depend on the target use of the VHD, ranging from establishing the Basic OS installation options used in a Standard Image; trough to some advanced customization where we may need to add additional software to the image.

We refer to the Basic Standardized OS installation as Reference Images. It’s quite normal to have these reference images versioned, as they will generally include all current updates and updated on a monthly basis. The procedure around how these are created and maintained will be specific to environments, Operating Systems and Procedures.

====== Windows Reference Images
The procedure to establish Windows Reference Images will be quite specific to each environment, due to the scope of what should be included or excluded from the image, and other items.

Please refer to the procedure which is documented in the topic [Windows Reference Image](coreos-create-windows-reference-image.html).

As an example, I am creating the initial VHDX from the Windows Server 2012 R2 ISO, using the following command
```powershell
.\Convert-WindowsImage.ps1 -source D:\Library\ISOs\Windows_Server_2012_r2_with_update_x64_9600.iso -Edition ServerStandard -VHDFormat VHDX -SizeBytes 50Gb -RemoteDesktopEnable -VHDPath D:\Library\VHDs\Windows_Server_2012R2_SP1_Std.vhdx -verbose
```

====== Linux Reference Images


The Procedure For Creating Linux References Images requires a little more labour

===== Refreshing the Library Share
By default VMM will only refresh the content in the Library share on an hourly schedule at most. To trigger a refresh after changes have been applied to the library, we again have two options available to us, the UI and PowerShell.

To Explore the Library Share, *Expand* the node which represents your library server, then **Right Click** on the share, in my example this is **Library** and from the Context menu chose the option **Refresh**.

.SCVMM Library - Refresh The Library
image::images/SCVMM2012R2-0057.png[PKI Post Deployment Configuration]

And to use PowerShell, we just need the following command
```powershell
Get-LibraryShare | Refresh-LibraryShare
```
