==== Preparation

We will start with some basic preparation work, in this case we will need a new server which is going to take the role of our 2012 R2 Domain controller. Once the server has been deployed and patched, we can proceed to configure it with its identity and network settings, while also getting some of the basic management tools for Active Directory deployed as these will be very important to us as we proceed with the installation.

===== Prepare Domain Controller

Start the process, by deploying your Windows Server 2012 R2 system which will be allocated for the task of Domain Controller. We will leverage the reference image we created in the pre-requisites phase to speed up the procedure.

Once the Node has been deployed you will need to apply some customisations, for example in our lab, we will be applying the following details. Note that the Name Server should be set depending on the path we will take

Set the Name Server IP address to that of an upstream DNS Server, possibly the local router, or an accessible public name service, for example the public Google Name Servers _(these are published at the IPv4 address of 8.8.8.8)_

[format="csv", options="header"]
|===
*Name* , PDC-AD-DC1
*IP Address* , 172.21.10.21
*IP Gateway*, 172.21.10.1
*Name Server* , Public Service e.g. 8.8.8.8
|===

===== Configure Name

(((rename computer)))
Deploy your Windows Server 2012 R2 system; leverage the reference image we created in the pre-requisites phase.

```powershell
Rename-Computer –NewName "PDC-AD-DC01"
Restart-computer
```
===== Configure Networking

(((assign IP Address)))
Deploy your Windows Server 2012 R2 system; leverage the reference image we created in the pre-requisites phase.

```powershell
PS> Get-NetAdapter

Name                      InterfaceDescription                    ifIndex Status
----                      --------------------                    ------- ------
VLAN110                   Microsoft Hyper-V Network Adapter #2         15 Up
```

The interface index number will help us identify what adapter we will be working with, in this example the index is *15*

With this, we can rename the interface, and set a static IP address

```powershell
Get-NetAdapter -InterfaceIndex 15 | Rename-NetAdapter -NewName "Local"

New-NetIPAddress -InterfaceIndex 15 -IPAddress 172.21.10.21 -DefaultGateway 172.21.10.1 -PrefixLength 24

Set-DNSClientServerAddress -InterfaceIndex 15 -ServerAddress 127.0.0.1

Set-DNSClient -InterfaceIndex 15 -connectionSpecificSuffix "DigiNerve.net" -RegisterThisConnectionsAddress $True -UseSuffixWhenRegistering $true

Invoke-CimMethod -ClassName Win32\_NetworkAdapterConfiguration -MethodName EnableWINS -Arguments @{DNSEnabledForWINSResolution = $false; WINSEnableLMHostsLookup =$false }

Get-CimInstance win32\_networkadapterconfiguration -Filter 'servicename = "netvsc"' | Invoke-CimMethod -MethodName settcpipnetbios -Arguments @{TcpipNetbiosOptions = 2}
```
===== Adding Management Tools

(((administration tools)))
Before we can truly do all the necessary work which we need to complete to get a fully configured enterprise ready Domain Controller, we will need to make sure that we have all the AD Domain Management tools installed on our workstation. As with all the tasks so far, we will launch a new PowerShell session with Administrative privileges.

```powershell
Add-WindowsFeature –Name RSAT-ADDS-Tools
```
